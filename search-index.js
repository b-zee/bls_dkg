var searchIndex = JSON.parse('{\
"bls_dkg":{"doc":"","i":[[0,"key_gen","bls_dkg","",null,null],[0,"message","bls_dkg::key_gen","",null,null],[4,"Message","bls_dkg::key_gen::message","Messages used for running BLS DKG.",null,null],[13,"Initialization","","",0,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",1,null],[12,"m","","",1,null],[12,"n","","",1,null],[12,"member_list","","",1,null],[13,"Proposal","bls_dkg::key_gen::message","",0,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",2,null],[12,"part","","",2,null],[13,"Complaint","bls_dkg::key_gen::message","",0,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",3,null],[12,"target","","",3,null],[12,"msg","","",3,null],[13,"Justification","bls_dkg::key_gen::message","",0,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",4,null],[12,"keys_map","","",4,null],[13,"Acknowledgment","bls_dkg::key_gen::message","",0,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",5,null],[12,"ack","","",5,null],[0,"outcome","bls_dkg::key_gen","",null,null],[3,"Outcome","bls_dkg::key_gen::outcome","DKG result",null,null],[12,"public_key_set","","Public key set to verify threshold signatures",6,null],[12,"secret_key_share","","Secret Key share.",6,null],[11,"new","","Create Outcome from components",6,[[["secretkeyshare",3],["publickeyset",3]]]],[4,"Error","bls_dkg::key_gen","A local error while handling a message, that was not …",null,null],[13,"Unknown","","Unknown error.",7,null],[13,"UnknownSender","","Unknown sender.",7,null],[13,"Serialization","","Failed to serialize message.",7,null],[13,"QuicP2P","","Network error from Quic-P2P.",7,null],[13,"Encryption","","Failed to encrypt message.",7,null],[13,"TooManyNonVoters","","Failed to finalize Complaint phase due to too many …",7,null],[13,"UnexpectedPhase","","Unexpected phase.",7,null],[12,"expected","bls_dkg::key_gen::Error","",8,null],[12,"actual","","",8,null],[13,"MissingPart","bls_dkg::key_gen","Ack on a missed part.",7,null],[3,"Part","","A contribution by a node for the key generation. The part …",null,null],[3,"Acknowledgment","","A confirmation that we have received and verified a …",null,null],[4,"PartOutcome","","The outcome of handling and verifying a <code>Part</code> message.",null,null],[13,"Valid","","The message was valid: the part of it that was encrypted …",9,null],[13,"Invalid","","The message was invalid: We now know that the proposer is …",9,null],[4,"Phase","","",null,null],[13,"Initialization","","",10,null],[13,"Contribution","","",10,null],[13,"Complaining","","",10,null],[13,"Justification","","",10,null],[13,"Commitment","","",10,null],[13,"Finalization","","",10,null],[3,"KeyGen","","An algorithm for dealerless distributed key generation.",null,null],[11,"initialize","","Creates a new <code>KeyGen</code> instance, together with the <code>Initial</code> …",11,[[["xorname",3],["btreeset",3]],[["error",4],["result",4]]]],[11,"phase","","",11,[[],["phase",4]]],[11,"handle_message","","Dispatching an incoming dkg message.",11,[[["message",4]],[["result",4],["error",4],["vec",3]]]],[11,"all_contribution_received","","",11,[[]]],[11,"timed_phase_transition","","",11,[[],[["result",4],["error",4],["vec",3]]]],[11,"is_finalized","","Returns <code>true</code> if in the phase of Finalization.",11,[[]]],[11,"generate_keys","","Returns the new secret key share and the public key set.",11,[[],["option",4]]],[11,"possible_blockers","","This function shall be called when the DKG procedure not …",11,[[],[["xorname",3],["btreeset",3]]]],[4,"AcknowledgmentFault","","<code>Acknowledgment</code> faulty entries.",null,null],[13,"ValueCount","","The number of values differs from the number of nodes.",12,null],[13,"MissingPart","","No corresponding Part received.",12,null],[13,"DecryptValue","","Value decryption failed.",12,null],[13,"DeserializeValue","","Value deserialization failed.",12,null],[13,"ValueAcknowledgment","","Value doesn\'t match the ack.",12,null],[4,"PartFault","","<code>Part</code> faulty entries.",null,null],[13,"RowCount","","The number of rows differs from the number of nodes.",13,null],[13,"MultipleParts","","Received multiple different Part messages from the same …",13,null],[13,"DecryptRow","","Could not decrypt our row in the Part message.",13,null],[13,"DeserializeRow","","Could not deserialize our row in the Part message.",13,null],[13,"RowAcknowledgment","","Row does not match the ack.",13,null],[11,"from","bls_dkg::key_gen::message","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","bls_dkg::key_gen::outcome","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","bls_dkg::key_gen","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"as_fail","","",7,[[],["fail",8]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"as_fail","","",12,[[],["fail",8]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"as_fail","","",13,[[],["fail",8]]],[11,"from","","",7,[[["box",3],["errorkind",4]],["error",4]]],[11,"clone","bls_dkg::key_gen::message","",0,[[],["message",4]]],[11,"clone","bls_dkg::key_gen::outcome","",6,[[],["outcome",3]]],[11,"clone","bls_dkg::key_gen","",7,[[],["error",4]]],[11,"clone","","",14,[[],["part",3]]],[11,"clone","","",15,[[],["acknowledgment",3]]],[11,"clone","","",10,[[],["phase",4]]],[11,"clone","","",12,[[],["acknowledgmentfault",4]]],[11,"clone","","",13,[[],["partfault",4]]],[11,"cmp","bls_dkg::key_gen::message","",0,[[["message",4]],["ordering",4]]],[11,"cmp","bls_dkg::key_gen","",14,[[["part",3]],["ordering",4]]],[11,"cmp","","",15,[[["acknowledgment",3]],["ordering",4]]],[11,"cmp","","",12,[[["acknowledgmentfault",4]],["ordering",4]]],[11,"cmp","","",13,[[["partfault",4]],["ordering",4]]],[11,"eq","bls_dkg::key_gen::message","",0,[[["message",4]]]],[11,"ne","","",0,[[["message",4]]]],[11,"eq","bls_dkg::key_gen","",7,[[["error",4]]]],[11,"ne","","",7,[[["error",4]]]],[11,"eq","","",14,[[["part",3]]]],[11,"ne","","",14,[[["part",3]]]],[11,"eq","","",15,[[["acknowledgment",3]]]],[11,"ne","","",15,[[["acknowledgment",3]]]],[11,"eq","","",10,[[["phase",4]]]],[11,"eq","","",12,[[["acknowledgmentfault",4]]]],[11,"eq","","",13,[[["partfault",4]]]],[11,"partial_cmp","bls_dkg::key_gen::message","",0,[[["message",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["message",4]]]],[11,"le","","",0,[[["message",4]]]],[11,"gt","","",0,[[["message",4]]]],[11,"ge","","",0,[[["message",4]]]],[11,"partial_cmp","bls_dkg::key_gen","",14,[[["part",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["part",3]]]],[11,"le","","",14,[[["part",3]]]],[11,"gt","","",14,[[["part",3]]]],[11,"ge","","",14,[[["part",3]]]],[11,"partial_cmp","","",15,[[["acknowledgment",3]],[["option",4],["ordering",4]]]],[11,"lt","","",15,[[["acknowledgment",3]]]],[11,"le","","",15,[[["acknowledgment",3]]]],[11,"gt","","",15,[[["acknowledgment",3]]]],[11,"ge","","",15,[[["acknowledgment",3]]]],[11,"partial_cmp","","",12,[[["acknowledgmentfault",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",13,[[["partfault",4]],[["option",4],["ordering",4]]]],[11,"fmt","bls_dkg::key_gen::message","",0,[[["formatter",3]],["result",6]]],[11,"fmt","bls_dkg::key_gen::outcome","",6,[[["formatter",3]],["result",6]]],[11,"fmt","bls_dkg::key_gen","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"deserialize","bls_dkg::key_gen::message","",0,[[],["result",4]]],[11,"deserialize","bls_dkg::key_gen","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",10,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"serialize","bls_dkg::key_gen::message","",0,[[],["result",4]]],[11,"serialize","bls_dkg::key_gen","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]]],"p":[[4,"Message"],[13,"Initialization"],[13,"Proposal"],[13,"Complaint"],[13,"Justification"],[13,"Acknowledgment"],[3,"Outcome"],[4,"Error"],[13,"UnexpectedPhase"],[4,"PartOutcome"],[4,"Phase"],[3,"KeyGen"],[4,"AcknowledgmentFault"],[4,"PartFault"],[3,"Part"],[3,"Acknowledgment"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);