var searchIndex = JSON.parse('{\
"bls_dkg":{"doc":"","i":[[0,"key_gen","bls_dkg","",null,null],[3,"Part","bls_dkg::key_gen","A contribution by a node for the key generation. The part…",null,null],[3,"Acknowledgment","","A confirmation that we have received and verified a…",null,null],[3,"KeyGen","","An algorithm for dealerless distributed key generation.",null,null],[4,"Error","","A local error while handling a message, that was not…",null,null],[13,"Unknown","","Unknown error.",0,null],[13,"UnknownSender","","Unknown sender.",0,null],[13,"Serialization","","Failed to serialize message.",0,null],[13,"QuicP2P","","Network error from Quic-P2P.",0,null],[13,"Encryption","","Failed to encrypt message.",0,null],[13,"TooManyNonVoters","","Failed to finalize Complaint phase due to too many…",0,null],[13,"UnexpectedPhase","","Unexpected phase.",0,null],[12,"expected","bls_dkg::key_gen::Error","",1,null],[12,"actual","","",1,null],[13,"MissingPart","bls_dkg::key_gen","Ack on a missed part.",0,null],[4,"PartOutcome","","The outcome of handling and verifying a `Part` message.",null,null],[13,"Valid","","The message was valid: the part of it that was encrypted…",2,null],[13,"Invalid","","The message was invalid: We now know that the proposer is…",2,null],[4,"Phase","","",null,null],[13,"Initialization","","",3,null],[13,"Contribution","","",3,null],[13,"Complaining","","",3,null],[13,"Justification","","",3,null],[13,"Commitment","","",3,null],[13,"Finalization","","",3,null],[4,"AcknowledgmentFault","","`Acknowledgment` faulty entries.",null,null],[13,"ValueCount","","The number of values differs from the number of nodes.",4,null],[13,"MissingPart","","No corresponding Part received.",4,null],[13,"DecryptValue","","Value decryption failed.",4,null],[13,"DeserializeValue","","Value deserialization failed.",4,null],[13,"ValueAcknowledgment","","Value doesn\'t match the ack.",4,null],[4,"PartFault","","`Part` faulty entries.",null,null],[13,"RowCount","","The number of rows differs from the number of nodes.",5,null],[13,"MultipleParts","","Received multiple different Part messages from the same…",5,null],[13,"DecryptRow","","Could not decrypt our row in the Part message.",5,null],[13,"DeserializeRow","","Could not deserialize our row in the Part message.",5,null],[13,"RowAcknowledgment","","Row does not match the ack.",5,null],[0,"message","","",null,null],[4,"Message","bls_dkg::key_gen::message","Messages used for running BLS DKG.",null,null],[13,"Initialization","","",6,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",7,null],[12,"m","","",7,null],[12,"n","","",7,null],[12,"member_list","","",7,null],[13,"Proposal","bls_dkg::key_gen::message","",6,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",8,null],[12,"part","","",8,null],[13,"Complaint","bls_dkg::key_gen::message","",6,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",9,null],[12,"target","","",9,null],[12,"msg","","",9,null],[13,"Justification","bls_dkg::key_gen::message","",6,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",10,null],[12,"keys_map","","",10,null],[13,"Acknowledgment","bls_dkg::key_gen::message","",6,null],[12,"key_gen_id","bls_dkg::key_gen::message::Message","",11,null],[12,"ack","","",11,null],[0,"outcome","bls_dkg::key_gen","",null,null],[3,"Outcome","bls_dkg::key_gen::outcome","DKG result",null,null],[12,"public_key_set","","Public key set to verify threshold signatures",12,null],[12,"secret_key_share","","Secret Key share.",12,null],[11,"new","","Create Outcome from components",12,[[["publickeyset",3],["secretkeyshare",3]]]],[11,"initialize","bls_dkg::key_gen","Creates a new `KeyGen` instance, together with the…",13,[[["xorname",3],["btreeset",3]],[["result",4],["error",4]]]],[11,"phase","","",13,[[],["phase",4]]],[11,"handle_message","","Dispatching an incoming dkg message.",13,[[["message",4]],[["error",4],["result",4],["vec",3]]]],[11,"all_contribution_received","","",13,[[]]],[11,"timed_phase_transition","","",13,[[],[["error",4],["result",4],["vec",3]]]],[11,"is_finalized","","Returns `true` if in the phase of Finalization.",13,[[]]],[11,"generate_keys","","Returns the new secret key share and the public key set.",13,[[],["option",4]]],[11,"possible_blockers","","This function shall be called when the DKG procedure not…",13,[[],[["xorname",3],["btreeset",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"as_fail","","",4,[[],["fail",8]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"as_fail","","",5,[[],["fail",8]]],[11,"from","bls_dkg::key_gen::message","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","bls_dkg::key_gen::outcome","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","bls_dkg::key_gen","",0,[[["box",3],["errorkind",4]],["error",4]]],[11,"clone","bls_dkg::key_gen::message","",6,[[],["message",4]]],[11,"clone","bls_dkg::key_gen::outcome","",12,[[],["outcome",3]]],[11,"clone","bls_dkg::key_gen","",0,[[],["error",4]]],[11,"clone","","",14,[[],["part",3]]],[11,"clone","","",15,[[],["acknowledgment",3]]],[11,"clone","","",3,[[],["phase",4]]],[11,"clone","","",4,[[],["acknowledgmentfault",4]]],[11,"clone","","",5,[[],["partfault",4]]],[11,"cmp","bls_dkg::key_gen::message","",6,[[["message",4]],["ordering",4]]],[11,"cmp","bls_dkg::key_gen","",14,[[["part",3]],["ordering",4]]],[11,"cmp","","",15,[[["acknowledgment",3]],["ordering",4]]],[11,"cmp","","",4,[[["acknowledgmentfault",4]],["ordering",4]]],[11,"cmp","","",5,[[["partfault",4]],["ordering",4]]],[11,"eq","bls_dkg::key_gen::message","",6,[[["message",4]]]],[11,"ne","","",6,[[["message",4]]]],[11,"eq","bls_dkg::key_gen","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"eq","","",14,[[["part",3]]]],[11,"ne","","",14,[[["part",3]]]],[11,"eq","","",15,[[["acknowledgment",3]]]],[11,"ne","","",15,[[["acknowledgment",3]]]],[11,"eq","","",3,[[["phase",4]]]],[11,"eq","","",4,[[["acknowledgmentfault",4]]]],[11,"eq","","",5,[[["partfault",4]]]],[11,"partial_cmp","bls_dkg::key_gen::message","",6,[[["message",4]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["message",4]]]],[11,"le","","",6,[[["message",4]]]],[11,"gt","","",6,[[["message",4]]]],[11,"ge","","",6,[[["message",4]]]],[11,"partial_cmp","bls_dkg::key_gen","",14,[[["part",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["part",3]]]],[11,"le","","",14,[[["part",3]]]],[11,"gt","","",14,[[["part",3]]]],[11,"ge","","",14,[[["part",3]]]],[11,"partial_cmp","","",15,[[["acknowledgment",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["acknowledgment",3]]]],[11,"le","","",15,[[["acknowledgment",3]]]],[11,"gt","","",15,[[["acknowledgment",3]]]],[11,"ge","","",15,[[["acknowledgment",3]]]],[11,"partial_cmp","","",4,[[["acknowledgmentfault",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[["partfault",4]],[["ordering",4],["option",4]]]],[11,"fmt","bls_dkg::key_gen::message","",6,[[["formatter",3]],["result",6]]],[11,"fmt","bls_dkg::key_gen::outcome","",12,[[["formatter",3]],["result",6]]],[11,"fmt","bls_dkg::key_gen","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"deserialize","bls_dkg::key_gen::message","",6,[[],["result",4]]],[11,"deserialize","bls_dkg::key_gen","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"serialize","bls_dkg::key_gen::message","",6,[[],["result",4]]],[11,"serialize","bls_dkg::key_gen","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]]],"p":[[4,"Error"],[13,"UnexpectedPhase"],[4,"PartOutcome"],[4,"Phase"],[4,"AcknowledgmentFault"],[4,"PartFault"],[4,"Message"],[13,"Initialization"],[13,"Proposal"],[13,"Complaint"],[13,"Justification"],[13,"Acknowledgment"],[3,"Outcome"],[3,"KeyGen"],[3,"Part"],[3,"Acknowledgment"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);